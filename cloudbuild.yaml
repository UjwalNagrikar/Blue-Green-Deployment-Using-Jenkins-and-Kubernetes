steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/my-app:latest', '.']

  # Step 2: Push Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/my-app:latest']

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      [
        'run', 'deploy', 'my-app',
        '--image', 'gcr.io/$PROJECT_ID/my-app:latest',
        '--region', 'asia-south1',
        '--allow-unauthenticated'
      ]

  # Step 4: Connect to GKE cluster
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud container clusters get-credentials my-gke-cluster --region asia-south1 --project $PROJECT_ID

  # Step 5: Update GKE deployment with new image
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        kubectl set image deployment/my-app-deployment my-app-container=gcr.io/$PROJECT_ID/my-app:latest
        kubectl rollout status deployment/my-app-deployment

images:
  - 'gcr.io/$PROJECT_ID/my-app:latest'

options:
  default_logs_bucket_behavior: REGIONAL_USER_OWNED_BUCKET
