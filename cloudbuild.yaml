steps:
  # Step 1: Build Docker image with unique tag (commit SHA)
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/my-app:$SHORT_SHA'
      - '.'

  # Step 2: Push the tagged image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/my-app:$SHORT_SHA'

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      [
        'run', 'deploy', 'my-app',
        '--image', 'gcr.io/$PROJECT_ID/my-app:$SHORT_SHA',
        '--region', 'asia-south1',
        '--allow-unauthenticated'
      ]

  # Step 4: Connect to GKE cluster
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "ðŸ”— Connecting to GKE..."
        gcloud container clusters get-credentials my-gke-cluster --region asia-south1 --project $PROJECT_ID

  # Step 5: Update GKE Deployment with the new image tag
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "ðŸš€ Updating GKE deployment with new image..."
        kubectl set image deployment/my-app my-app=gcr.io/$PROJECT_ID/my-app:$SHORT_SHA
        kubectl rollout status deployment/my-app

images:
  - 'gcr.io/$PROJECT_ID/my-app:$SHORT_SHA'

options:
  default_logs_bucket_behavior: REGIONAL_USER_OWNED_BUCKET
